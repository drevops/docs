"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[7226],{8680:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=i(4848),s=i(8453);const o={sidebar_position:2},r="Settings",l={id:"drupal/settings",title:"Settings",description:"The settings.php file provides the primary configuration for a Drupal site,",source:"@site/content/drupal/settings.mdx",sourceDirName:"drupal",slug:"/drupal/settings",permalink:"/drupal/settings",draft:!1,unlisted:!1,editUrl:"https://github.com/drevops/scaffold/tree/develop/.scaffold/docs/content/drupal/settings.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Composer",permalink:"/drupal/composer"},next:{title:"Provision",permalink:"/drupal/provision"}},d={},c=[{value:"1. Environment constants definitions",id:"1-environment-constants-definitions",level:3},{value:"2. Site-specific settings",id:"2-site-specific-settings",level:3},{value:"3. Environment detection",id:"3-environment-detection",level:3},{value:"Environment detection override",id:"environment-detection-override",level:4},{value:"4. Per-environment overrides",id:"4-per-environment-overrides",level:3},{value:"5. Inclusion of per-module settings",id:"5-inclusion-of-per-module-settings",level:3},{value:"6. Inclusion of local settings",id:"6-inclusion-of-local-settings",level:3},{value:"Testing settings with unit tests",id:"testing-settings-with-unit-tests",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"settings",children:"Settings"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"settings.php"})," file provides the primary configuration for a Drupal site,\nincluding its database connection, file paths, and various other settings."]}),"\n",(0,t.jsxs)(n.p,{children:["Scaffold ships with own streamlined version of\nthe ",(0,t.jsx)(n.a,{href:"https://github.com/drevops/scaffold/blob/develop/web/sites/default/settings.php",children:(0,t.jsx)(n.code,{children:"settings.php"})})," and\n",(0,t.jsx)(n.a,{href:"https://github.com/drevops/scaffold/blob/develop/web/sites/default/services.yml",children:(0,t.jsx)(n.code,{children:"services.yml"})})," files. There are\nalso ",(0,t.jsx)(n.a,{href:"#testing-settings-with-unit-tests",children:"Settings unit tests"})," that ensure that\nthe settings apply correctly per environment."]}),"\n",(0,t.jsxs)(n.p,{children:["The default Drupal scaffold's ",(0,t.jsx)(n.a,{href:"https://github.com/drevops/scaffold/blob/develop/web/sites/default/default.settings.php",children:(0,t.jsx)(n.code,{children:"default.settings.php"})}),"\nand ",(0,t.jsx)(n.a,{href:"https://github.com/drevops/scaffold/blob/develop/web/sites/default/default.services.yml",children:(0,t.jsx)(n.code,{children:"default.services.yml"})}),"\nfiles are also provided if you choose to use them instead."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/drevops/scaffold/blob/develop/web/sites/default/settings.php",children:(0,t.jsx)(n.code,{children:"settings.php"})})," file is divided\ninto several sections:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#1-environment-constants-definitions",children:"Environment constants definitions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#2-site-specific-settings",children:"Site-specific settings"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#3-environment-detection",children:"Environment detection"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#4-per-environment-overrides",children:"Per-environment overrides"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#5-inclusion-of-per-module-settings",children:"Inclusion of generated Settings"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#6-inclusion-of-local-settings",children:"Inclusion of local settings"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"1-environment-constants-definitions",children:"1. Environment constants definitions"}),"\n",(0,t.jsx)(n.p,{children:"Constants for various environments are defined here. These can be used to alter\nsite behavior based on the active environment."}),"\n",(0,t.jsx)(n.p,{children:"Available constants include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ENVIRONMENT_LOCAL"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ENVIRONMENT_CI"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ENVIRONMENT_PROD"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ENVIRONMENT_TEST"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ENVIRONMENT_DEV"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["These are later used to set ",(0,t.jsx)(n.code,{children:"$settings['environment']"})," variable, which can be\nused in the modules and outside scripts to target code execution to specific\nenvironments."]}),"\n",(0,t.jsx)(n.admonition,{title:"EXAMPLE",type:"info",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'environment="$(drush php:eval "print \\Drupal\\core\\Site\\Settings::get(\'environment\');")"\nif echo "${environment}" | grep -q -e ci -e local; then\n  # Do something only in ci, or local environments.\nfi\n'})})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"$DREVOPS_PROVISION_ENVIRONMENT"})," environment variable can be utilized\nwithin post-provision custom scripts, allowing targeted code execution based\non specific environments. Refer to ",(0,t.jsx)(n.a,{href:"/drupal/provision",children:"Provision"})," for additional\ninformation."]})}),"\n",(0,t.jsx)(n.h3,{id:"2-site-specific-settings",children:"2. Site-specific settings"}),"\n",(0,t.jsx)(n.p,{children:"This section is used for configuring core site settings such as defining paths,\nensuring security with trusted host patterns, setting performance optimizations\nlike aggregating CSS and JS files, and specifying essential directories for\nDrupal's functionality."}),"\n",(0,t.jsx)(n.p,{children:"These settings are identical for all environments."}),"\n",(0,t.jsxs)(n.p,{children:["Use per-module settings files in the ",(0,t.jsx)(n.code,{children:"/includes"})," directory to override\nper-module settings, including per-environment overrides."]}),"\n",(0,t.jsx)(n.h3,{id:"3-environment-detection",children:"3. Environment detection"}),"\n",(0,t.jsxs)(n.p,{children:["This section uses known per-platform mechanisms to determine in which\nenvironment the site currently runs. The result is stored in the\n",(0,t.jsx)(n.code,{children:"$settings['environment']"})," variable."]}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"$settings['environment']"})," is set to ",(0,t.jsx)(n.code,{children:"ENVIRONMENT_LOCAL"}),".\nThis value is then overridden by the environment detection logic."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["In any hosting environment, the default value of ",(0,t.jsx)(n.code,{children:"$settings['environment']"}),"\nchanges to ",(0,t.jsx)(n.code,{children:"ENVIRONMENT_DEV"}),", while further refinements designate more\nadvanced environments."]})}),"\n",(0,t.jsx)(n.h4,{id:"environment-detection-override",children:"Environment detection override"}),"\n",(0,t.jsxs)(n.p,{children:["It is also possible to force specific environment by setting\n",(0,t.jsx)(n.code,{children:"DRUPAL_ENVIRONMENT"})," environment variable. In this case, the environment\ndetection will take place and will load any additional per-platform settings,\nbut the final value of ",(0,t.jsx)(n.code,{children:"$settings['environment']"})," will be set to the value of\n",(0,t.jsx)(n.code,{children:"DRUPAL_ENVIRONMENT"})," variable."]}),"\n",(0,t.jsx)(n.p,{children:"This is useful in cases where a certain behavior is required for a specific\nenvironment, but the environment detection logic does not provide it. Or as a\ntemporary override during testing."}),"\n",(0,t.jsx)(n.h3,{id:"4-per-environment-overrides",children:"4. Per-environment overrides"}),"\n",(0,t.jsx)(n.p,{children:"Configurations in this section alter the site's behavior based on the\nenvironment. Out-of-the-box, Scaffold provides overrides for CI and Local\nenvironments."}),"\n",(0,t.jsx)(n.p,{children:"You can add additional overrides for other environments as needed."}),"\n",(0,t.jsx)(n.h3,{id:"5-inclusion-of-per-module-settings",children:"5. Inclusion of per-module settings"}),"\n",(0,t.jsxs)(n.p,{children:["This section includes any additional module-specific settings from the\n",(0,t.jsx)(n.code,{children:"/includes"})," directory."]}),"\n",(0,t.jsx)(n.p,{children:"Scaffold ships with settings overrides for several popular contributed modules\nused in almost every project."}),"\n",(0,t.jsxs)(n.p,{children:["The per environment overrides for modules should be also placed into files\nin the ",(0,t.jsx)(n.code,{children:"/includes"})," directory."]}),"\n",(0,t.jsx)(n.h3,{id:"6-inclusion-of-local-settings",children:"6. Inclusion of local settings"}),"\n",(0,t.jsxs)(n.p,{children:["At the end of the ",(0,t.jsx)(n.code,{children:"settings.php"}),", there is an option to include additional local\nsettings. This allows developers to override some settings for their local\nenvironment without affecting the main configuration. Developers can\ncopy ",(0,t.jsx)(n.code,{children:"default.settings.local.php"})," and ",(0,t.jsx)(n.code,{children:"default.services.local.yml"}),"\nto ",(0,t.jsx)(n.code,{children:"settings.local.php"})," and ",(0,t.jsx)(n.code,{children:"services.local.yml"}),", respectively, to utilize this\nfunctionality."]}),"\n",(0,t.jsx)(n.h2,{id:"testing-settings-with-unit-tests",children:"Testing settings with unit tests"}),"\n",(0,t.jsxs)(n.p,{children:["DrevOps Scaffold provides a ",(0,t.jsx)(n.a,{href:"https://github.com/drevops/scaffold/blob/develop/tests/phpunit/Drupal",children:"set of unit tests"})," that\nensure that the settings apply correctly per environment. These tests are\nsupposed to be maintained within your project, ensuring that settings activated\nby specific environments and environment variables are applied accurately."]}),"\n",(0,t.jsxs)(n.p,{children:["After installing DrevOps Scaffold, run ",(0,t.jsx)(n.code,{children:"vendor/bin/phpunit --group=drupal_settings"})," to\nrun the tests for the settings provided by DrevOps Scaffold."]}),"\n",(0,t.jsx)(n.p,{children:"You may simply remove these tests if you do not want to maintain them."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);