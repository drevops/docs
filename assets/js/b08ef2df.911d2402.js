"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[7034],{1931:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var i=s(4848),r=s(8453),t=s(1432);const l='#!/usr/bin/env bash\n##\n# Action description that the script performs.\n#\n# More description and usage information with a last empty\n# comment line.\n#\n\nset -eu\n[ "${DREVOPS_DEBUG-}" = "1" ] && set -x\n\n# Example scaffold variable with a default value.\nDREVOPS_SCAFFOLD_EXAMPLE_URL="${DREVOPS_SCAFFOLD_EXAMPLE_URL:-http://example.com}"\n\n# ------------------------------------------------------------------------------\n\n# @formatter:off\nnote() { printf "       %s\\n" "${1}"; }\ninfo() { [ "${TERM:-}" != "dumb" ] && tput colors >/dev/null 2>&1 && printf "\\033[34m[INFO] %s\\033[0m\\n" "${1}" || printf "[INFO] %s\\n" "${1}"; }\npass() { [ "${TERM:-}" != "dumb" ] && tput colors >/dev/null 2>&1 && printf "\\033[32m[ OK ] %s\\033[0m\\n" "${1}" || printf "[ OK ] %s\\n" "${1}"; }\nfail() { [ "${TERM:-}" != "dumb" ] && tput colors >/dev/null 2>&1 && printf "\\033[31m[FAIL] %s\\033[0m\\n" "${1}" || printf "[FAIL] %s\\n" "${1}"; }\n# @formatter:on\n\ninfo "Started scaffold operations."\n\n[ -z "${DREVOPS_SCAFFOLD_EXAMPLE_URL}" ] && fail "Missing required value for DREVOPS_SCAFFOLD_EXAMPLE_URL" && exit 1\ncommand -v curl >/dev/null || (fail "curl command is not available." && exit 1)\n\n# Example of the script body.\ncurl -L -s -o /dev/null -w "%{http_code}" "${DREVOPS_SCAFFOLD_EXAMPLE_URL}" | grep -q \'200\\|403\' && note "Requested example page"\n\npass "Finished scaffold operations."\n',a={},c="Authoring scripts",o={id:"contributing/maintenance/scripts",title:"Authoring scripts",description:"Requirements",source:"@site/content/contributing/maintenance/scripts.mdx",sourceDirName:"contributing/maintenance",slug:"/contributing/maintenance/scripts",permalink:"/contributing/maintenance/scripts",draft:!1,unlisted:!1,editUrl:"https://github.com/drevops/scaffold/tree/develop/.scaffold/docs/content/contributing/maintenance/scripts.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Authoring documentation",permalink:"/contributing/maintenance/documentation"},next:{title:"Authoring tests",permalink:"/contributing/maintenance/tests"}},d={},h=[{value:"Requirements",id:"requirements",level:2},{value:"Variables",id:"variables",level:2},{value:"Boilerplate script",id:"boilerplate-script",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"authoring-scripts",children:"Authoring scripts"}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.a,{href:"https://www.ietf.org/rfc/rfc2119.txt",children:"RFC2119"})," for meaning of words ",(0,i.jsx)(n.code,{children:"MUST"}),", ",(0,i.jsx)(n.code,{children:"SHOULD"})," and ",(0,i.jsx)(n.code,{children:"MAY"}),"."]})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["MUST adhere to ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/POSIX",children:"POSIX standard"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"MUST pass Shellcheck code analysis scan"}),"\n",(0,i.jsx)(n.li,{children:"MUST start with:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:' #!/usr/bin/env bash\n ##\n # Action description that the script performs.\n #\n # More description and usage information with a last empty\n # comment line.\n #\n\n set -eu\n [ "${DREVOPS_DEBUG-}" = "1" ] && set -x\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"MUST list all variables with their default values and descriptions. i.e.:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Deployment reference, such as a git SHA.\nDREVOPS_NOTIFY_REF="${DREVOPS_NOTIFY_REF:-}"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"MUST include a delimiter between variables and the script body preceded and\nfollowed by an empty line (3 lines in total):"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# ------------------------------------------------------------------------------\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:"SHOULD include formatting helper functions:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# @formatter:off\nnote() { printf "       %s\\n" "${1}"; }\ninfo() { [ "${TERM:-}" != "dumb" ] && tput colors >/dev/null 2>&1 && printf "\\033[34m[INFO] %s\\033[0m\\n" "${1}" || printf "[INFO] %s\\n" "${1}"; }\npass() { [ "${TERM:-}" != "dumb" ] && tput colors >/dev/null 2>&1 && printf "\\033[32m[ OK ] %s\\033[0m\\n" "${1}" || printf "[ OK ] %s\\n" "${1}"; }\nfail() { [ "${TERM:-}" != "dumb" ] && tput colors >/dev/null 2>&1 && printf "\\033[31m[FAIL] %s\\033[0m\\n" "${1}" || printf "[FAIL] %s\\n" "${1}"; }\n# @formatter:on\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"7",children:["\n",(0,i.jsx)(n.li,{children:"SHOULD include variable values checks with errors and early exist, i.e.:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'[ -z "${DREVOPS_NOTIFY_REF}" ] && fail "Missing required value for DREVOPS_NOTIFY_REF" && exit 1\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"8",children:["\n",(0,i.jsx)(n.li,{children:"SHOULD include binaries checks if the script relies on them, i.e.:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'command -v curl > /dev/null || ( fail "curl command is not available." && exit 1 )\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"9",children:["\n",(0,i.jsxs)(n.li,{children:["MUST contain an ",(0,i.jsx)(n.code,{children:"info"})," message about the start of the script body, e.g.:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'info "Started GitHub notification for operation ${DREVOPS_NOTIFY_EVENT}"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"10",children:["\n",(0,i.jsxs)(n.li,{children:["MUST contain an ",(0,i.jsx)(n.code,{children:"pass"})," message about the finish of the script body, e.g.:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'pass "Finished GitHub notification for operation ${DREVOPS_NOTIFY_EVENT}"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"11",children:["\n",(0,i.jsx)(n.li,{children:"MUST use uppercase global variables"}),"\n",(0,i.jsx)(n.li,{children:"MUST use lowercase local variables."}),"\n",(0,i.jsxs)(n.li,{children:["MUST use long options instead of short options for readability. I.e., ",(0,i.jsx)(n.code,{children:"drush cache:rebuild"})," instead of ",(0,i.jsx)(n.code,{children:"drush cr"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["MUST use ",(0,i.jsx)(n.code,{children:"DREVOPS_"})," prefix for variables, unless it is a known 3-rd party\nvariable like ",(0,i.jsx)(n.code,{children:"GITHUB_TOKEN"})," or ",(0,i.jsx)(n.code,{children:"COMPOSER"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["MUST use script-specific prefix. I.e., for ",(0,i.jsx)(n.code,{children:"notify.sh"}),", the variable to skip\nnotifications should start with ",(0,i.jsx)(n.code,{children:"DREVOPS_NOTIFY_"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"MAY rely on variables from the external scripts (not prefixed with a\nscript-specific prefix), but MUST declare such variables in the header of\nthe file."}),"\n",(0,i.jsx)(n.li,{children:"MAY call other DrevOps Scaffold scripts (discouraged), but MUST source them rather\nthan creating a sub-process. This is to allow passing environment variables\ndown the call stack."}),"\n",(0,i.jsxs)(n.li,{children:["SHOULD use ",(0,i.jsx)(n.code,{children:"note"})," messages for informing about the script progress."]}),"\n",(0,i.jsxs)(n.li,{children:["MUST use variables in the form of ",(0,i.jsx)(n.code,{children:"${VAR}"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,i.jsx)(n.p,{children:"Follow these guidelines when creating or updating DrevOps variables."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Local variables MUST be in lowercase, and global variables MUST be in\nuppercase."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["All DrevOps Scaffold variables MUST start with ",(0,i.jsx)(n.code,{children:"DREVOPS_"})," to separate DrevOps from\nthird-party variables."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Global variables MAY be re-used as-is across scripts. For instance, the\n",(0,i.jsx)(n.code,{children:"DREVOPS_WEBROOT"})," variable is used in several scripts."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["DrevOps Scaffold action-specific script variables MUST be scoped within their own\nscript. For instance, the ",(0,i.jsx)(n.code,{children:"DREVOPS_PROVISION_OVERRIDE_DB"}),"\nvariable in the ",(0,i.jsx)(n.code,{children:"provision.sh"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Drupal-related variables SHOULD start with ",(0,i.jsx)(n.code,{children:"DRUPAL_"})," and SHOULD have a module\nname added as a second prefix. This is to separate DrevOps Scaffold,\nthird-party services variables, and Drupal variables. For instance, to set\na user for Drupal's Shield module configuration, use ",(0,i.jsx)(n.code,{children:"DRUPAL_SHIELD_USER"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Variables SHOULD NOT be exported into the global scope unless absolutely\nnecessary. Thus, values in ",(0,i.jsx)(n.code,{children:".env"})," SHOULD have default values set, but SHOULD\nbe commented out to provide visibility and avoid exposure to the global scope."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"boilerplate-script",children:"Boilerplate script"}),"\n",(0,i.jsx)(n.p,{children:"Use the boilerplate script below to kick-start your custom DrevOps Scaffold script."}),"\n","\n","\n",(0,i.jsx)(t.A,{language:"bash",children:l})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);