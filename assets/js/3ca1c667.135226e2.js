"use strict";(self.webpackChunkscaffold=self.webpackChunkscaffold||[]).push([[8481],{5065:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=n(4848),s=n(8453);const o={},a="Build",l={id:"workflows/build",title:"Build",description:"The entire process of building the site is automated using the build",source:"@site/content/workflows/build.mdx",sourceDirName:"workflows",slug:"/workflows/build",permalink:"/workflows/build",draft:!1,unlisted:!1,editUrl:"https://github.com/drevops/scaffold/tree/develop/.scaffold/docs/content/workflows/build.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"GitHub-flow",permalink:"/workflows/releasing/github-flow"},next:{title:"Deployment",permalink:"/workflows/deployment"}},r={},d=[{value:"Build steps",id:"build-steps",level:2},{value:"1. Initialise variables from <code>.env</code>, <code>.env.local</code> and environment",id:"1-initialise-variables-from-env-envlocal-and-environment",level:3},{value:"2. Validate Docker Compose configuration",id:"2-validate-docker-compose-configuration",level:3},{value:"3. Validate Composer configuration",id:"3-validate-composer-configuration",level:3},{value:"4. Database in container image?",id:"4-database-in-container-image",level:3},{value:"5. Build images and start containers",id:"5-build-images-and-start-containers",level:3},{value:"6. Code export directory set?",id:"6-code-export-directory-set",level:3},{value:"7. Install development dependencies",id:"7-install-development-dependencies",level:3},{value:"8. Is theme available?",id:"8-is-theme-available",level:3},{value:"9. Provision site",id:"9-provision-site",level:3},{value:"10. Check that the site is available",id:"10-check-that-the-site-is-available",level:3}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"build",children:"Build"}),"\n",(0,t.jsxs)(i.p,{children:["The entire process of building the site is automated using the ",(0,t.jsx)(i.a,{href:"https://github.com/drevops/scaffold/blob/develop/scripts/drevops/build.sh",children:"build"}),"\nscript."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"It serves as a wrapper for commands that would normally be\nexecuted manually and includes minimal workflow logic."})}),"\n",(0,t.jsx)(i.p,{children:"This script is designed to be executed both locally and in a continuous\nintegration (CI) environment with a single command, and it handles the following\ntasks:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Validation of Docker Compose and Composer configurations"}),"\n",(0,t.jsx)(i.li,{children:"Building container images and starting containers"}),"\n",(0,t.jsx)(i.li,{children:"Installing the development dependencies"}),"\n",(0,t.jsxs)(i.li,{children:["Executing ",(0,t.jsx)(i.a,{href:"https://github.com/drevops/scaffold/blob/develop/scripts/drevops/provision.sh",children:"the site provisioning script"})]}),"\n",(0,t.jsx)(i.li,{children:"Verifying that the stack is functioning correctly and the site is\naccessible"}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["To initiate the build process, simply run the command ",(0,t.jsx)(i.code,{children:"ahoy build"}),"."]}),"\n",(0,t.jsx)(i.p,{children:"::: tip"}),"\n",(0,t.jsxs)(i.p,{children:["Do not forget to download your database with ",(0,t.jsx)(i.code,{children:"ahoy download-db"})," before\nrunning ",(0,t.jsx)(i.code,{children:"ahoy build"})," or your site will not have a source database dump to\nimport."]}),"\n",(0,t.jsx)(i.p,{children:":::"}),"\n",(0,t.jsx)(i.h2,{id:"build-steps",children:"Build steps"}),"\n",(0,t.jsx)(i.mermaid,{value:'flowchart TB\n  start(["Begin"]) --\x3e A["1. Initialise variables from\\n.env, .env.local and environment"]\n\n  A --\x3e B["2. Validate Docker Compose configuration"]\n  B --\x3e C["3. Validate Composer configuration"]\n\n  C --\x3e F{"4. Database\\nin Docker\\nimage?"}\n  F -- Yes --\x3e G["4.1 Pull the provided\\ncontainer image from registry"]\n  F -- No --\x3e H\n\n  G --\x3e H["5. Build images and start containers"]\n\n  H --\x3e H1{"6. Code export\\ndir set?"}\n  H1 -- Yes --\x3e I["6.1 Export built code"]\n  H1 -- No --\x3e K\n\n  I --\x3e K["7. Install development\\ndependencies"]\n\n  K --\x3e L{"8. Is theme\\navailable?"}\n  L -- Yes --\x3e M["8.1. Install and compile front-end\\ndependencies"]\n  L -- No --\x3e N["9. Provision site"]\n  M --\x3e N["9. Provision site"]\n\n  N --\x3e P["10. Check that the site\\nis available"]\n\n  P --\x3e finish(["End"])'}),"\n",(0,t.jsxs)(i.h3,{id:"1-initialise-variables-from-env-envlocal-and-environment",children:["1. Initialise variables from ",(0,t.jsx)(i.code,{children:".env"}),", ",(0,t.jsx)(i.code,{children:".env.local"})," and environment"]}),"\n",(0,t.jsxs)(i.p,{children:["Variables are read from multiple locations in ",(0,t.jsx)(i.a,{href:"/workflows/variables#override-order-bottom-values-win",children:"the predefined order"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"2-validate-docker-compose-configuration",children:"2. Validate Docker Compose configuration"}),"\n",(0,t.jsx)(i.p,{children:"The script validates the Docker Compose configuration and exits if it is not\nvalid. This is designed to catch errors in the configuration early."}),"\n",(0,t.jsx)(i.h3,{id:"3-validate-composer-configuration",children:"3. Validate Composer configuration"}),"\n",(0,t.jsxs)(i.p,{children:["The script validates the Composer configuration and exits if it is not valid.\nThe ",(0,t.jsx)(i.code,{children:"composer.lock"})," will be validated as well."]}),"\n",(0,t.jsx)(i.h3,{id:"4-database-in-container-image",children:"4. Database in container image?"}),"\n",(0,t.jsxs)(i.p,{children:["If the database is stored in the container image rather than a dump file, the\nscript will pull the image from the registry and will use it as a database.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(i.h3,{id:"5-build-images-and-start-containers",children:"5. Build images and start containers"}),"\n",(0,t.jsxs)(i.p,{children:["The script will build the container images and start the containers.\nOnly required files will be copied into the image and only production\ndependencies will be installed. See more in ",(0,t.jsx)(i.a,{href:"/tools/docker",children:"the Docker section"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"6-code-export-directory-set",children:"6. Code export directory set?"}),"\n",(0,t.jsxs)(i.p,{children:["If the ",(0,t.jsx)(i.code,{children:"$DREVOPS_CODE_EXPORT_DIR"})," variable is set, the script will export the\nbuilt code into the specified directory, which than can be used to build a\ndeployment artifact. This is used in CI to support hosting environments\nthat support only artifact code deployments (no build pipeline), like Acquia."]}),"\n",(0,t.jsx)(i.h3,{id:"7-install-development-dependencies",children:"7. Install development dependencies"}),"\n",(0,t.jsx)(i.p,{children:"The script will install the development dependencies, which are required for\nthe site development and testing. These are installed separately from the\nstep 5 dependencies to avoid adding the production image and code artifact\nwith unnecessary dependencies (which also widens the security perimeter and\nincreases the build time)."}),"\n",(0,t.jsx)(i.h3,{id:"8-is-theme-available",children:"8. Is theme available?"}),"\n",(0,t.jsxs)(i.p,{children:["If the environment variable ",(0,t.jsx)(i.code,{children:"$DRUPAL_THEME"})," is set, the script will\ninstall the front-end dependencies and compile assets. Note that this already\nhappens during the Docker build process, so this step runs ",(0,t.jsx)(i.strong,{children:"only locally"}),"\nto update the assets to use development versions based on the current theme\nbuild configuration (e.g. during development, the theme assets may not need\nto be minimised etc.)."]}),"\n",(0,t.jsx)(i.h3,{id:"9-provision-site",children:"9. Provision site"}),"\n",(0,t.jsxs)(i.p,{children:["This step will provision the site using ",(0,t.jsx)(i.a,{href:"https://github.com/drevops/scaffold/blob/develop/scripts/drevops/provision.sh",children:"the site provisioning script"}),",\nwhich contains all the workflow logic that controls which actions are taken\nwhen the site is provision. It runs in all environments."]}),"\n",(0,t.jsx)(i.h3,{id:"10-check-that-the-site-is-available",children:"10. Check that the site is available"}),"\n",(0,t.jsxs)(i.p,{children:["This step uses ",(0,t.jsx)(i.a,{href:"https://github.com/drevops/scaffold/blob/develop/scripts/drevops/doctor.sh",children:"doctor script"})," to\ncheck that the stack is running correctly and that the site is available\n(bootstrappable) and will exit with an error.",(0,t.jsx)("br",{}),"\nSee more in ",(0,t.jsx)(i.a,{href:"/tools/doctor",children:"the Doctor section"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>l});var t=n(6540);const s={},o=t.createContext(s);function a(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);